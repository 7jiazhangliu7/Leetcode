Given an array of citations (each citation is a non-negative integer) of a researcher, write a function to compute the researcher's h-index.

According to the definition of h-index on Wikipedia: "A scientist has index h if h of his/her N papers have at least h citations each, and the other N − h papers have no more than h citations each."

For example, given citations = [3, 0, 6, 1, 5], which means the researcher has 5 papers in total and each of them had received 3, 0, 6, 1, 5 citations respectively. Since the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, his h-index is 3.

Note: If there are several possible values for h, the maximum one is taken as the h-index.

public class Solution {
    public int hIndex(int[] citations) {
        if(citations == null || citations.length == 0) {
            return 0;
        }
        //反着排序，只要前i个满足至少是i个citation，后n-i个没有i个citation，就继续
        //直到某一点违反了规律
        Arrays.sort(citations);
        int start = 0, end = citations.length-1;
        while(start < end) {
            int tmp = citations[start];
            citations[start] = citations[end];
            citations[end] = tmp;
            start++;
            end--;
        }
        
        for(int i = 0; i < citations.length; i++) {
            if(i >= citations[i]) {
                return i;
            }
        }
        
        return citations.length;
    }
}
