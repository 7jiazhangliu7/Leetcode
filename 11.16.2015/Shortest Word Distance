Given a list of words and two words word1 and word2, return the shortest distance between these two words in the list.

For example,
Assume that words = ["practice", "makes", "perfect", "coding", "makes"].

Given word1 = “coding”, word2 = “practice”, return 3.
Given word1 = "makes", word2 = "coding", return 1.

Note:
You may assume that word1 does not equal to word2, and word1 and word2 are both in the list.

public class Solution {
    public int shortestDistance(String[] words, String word1, String word2) {
        if(words == null || words.length == 0) {
            return 0;
        }
        //两个指针，找到对应单词后记录下来，然后如果两个指针都合法，就比较距离
        int pos1 = -1, pos2 = -1;
        int result = Integer.MAX_VALUE;
        
        for(int i = 0; i < words.length; i++) {
            if(words[i].equals(word1)) {
                pos1 = i;
            }
            
            if(words[i].equals(word2)) {
                pos2 = i;
            }
            
            if(pos1 != -1 && pos2 != -1) {
                result = Math.min(result, Math.abs(pos1 - pos2));
            }
        }
        
        return result;
    }
}
